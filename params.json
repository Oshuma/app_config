{"name":"AppConfig","tagline":"Simple Ruby framework-agnostic application configuration.","body":"## Deprecation Note\r\n\r\nVersion `2.0` is **not** backwards compatible with the [1.x](https://github.com/Oshuma/app_config/tree/1.x) branch.\r\n\r\n\r\n## Usage\r\n\r\nUsage is simple.  Just pass either a hash of options, or a block, to `AppConfig.setup!`.\r\n\r\nIn it's simplest form, you can use it like so:\r\n\r\n```ruby\r\nAppConfig.setup!(:admin_email => 'admin@example.com')\r\n# ..or..\r\nAppConfig.setup! do |config|\r\n  config.admin_email = 'admin@example.com'\r\nend\r\n\r\nAppConfig.admin_email  # => 'admin@example.com'\r\n```\r\n\r\nYou may also specify the storage method along with options specific to that storage method.\r\n\r\n## YAML\r\n\r\nGiven this YAML file:\r\n\r\n```yaml\r\n---\r\nadmin_email: 'admin@example.com'\r\napi_name:    'Supr Webz 2.0'\r\napi_key:     'SUPERAWESOMESERVICE'\r\n```\r\n\r\nUse it like so:\r\n\r\n```ruby\r\nAppConfig.setup!(:yaml => '/path/to/app_config.yml')\r\n\r\n# Later on...\r\nAppConfig.admin_email  # => 'admin@example.com'\r\nAppConfig.api_name     # => 'Supr Webz 2.0'\r\nAppConfig.api_key      # => 'SUPERAWESOMESERVICE'\r\n```\r\n\r\n## Mongo\r\n\r\nYou can pass a `:mongo` options hash to `AppConfig.setup!` which should contain\r\nconfiguration values for a Mongo database.  Check the `AppConfig::Storage::Mongo::DEFAULTS`\r\nconstant for the default Mongo connection options.\r\n\r\n```ruby\r\nmongo_opts = {\r\n  :host       => 'localhost',   # default\r\n  :database   => 'app_config',  # default\r\n  :collection => 'app_config'   # default\r\n}\r\nAppConfig.setup!(:mongo => mongo_opts)\r\n\r\nAppConfig.admin_email  # => 'admin@example.com'\r\n\r\n# Override an existing value and save to the database:\r\nAppConfig.admin_email = 'other_admin@example.com'\r\nAppConfig.save!\r\n```\r\n\r\nThe values are read/saved (by default) to the `app_config` database and\r\n`app_config` collection.  These defaults can be overridden, however, which\r\nmight lend well to versioned configurations; collection names such as\r\n`app_config_v1`, `app_config_v2`, etc.\r\n\r\n```ruby\r\nAppConfig.setup!(:mongo => { :collection => 'app_config_v2' })\r\n```\r\n\r\n## More Usage Examples\r\n\r\n* [Mongo](https://github.com/Oshuma/app_config/wiki/Mongo)\r\n* [YAML](https://github.com/Oshuma/app_config/wiki/YAML)\r\n","google":"UA-19817598-1","note":"Don't delete this file! It's used internally to help with page regeneration."}
